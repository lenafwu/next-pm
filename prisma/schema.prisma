// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
   provider = "postgresql"
   url = env("POSTGRES_PRISMA_URL") 
}

model Task {
  id       String   @id @default(uuid())
  name     String
  dueDate  DateTime?  // Optional due date
  detail   String?    // Optional detail
  status   String     // Status of the task
}

model Assignment {
  id         String   @id @default(uuid())
  name       String
  dueDate    DateTime?  // Optional due date
  detail     String?    // Optional detail
  status     String     // Status of the task
  points     Float?      // Points for the assignment
  courseId   String     // Link to Course model
  gradeItem  GradeItem? @relation(fields: [gradeItemId], references: [id])
  gradeItemId String?   @unique
  course     Course     @relation(fields: [courseId], references: [id])
}

model Course {
  id         String       @id @default(uuid())
  name       String
  assignments Assignment[] // One-to-many relation with Assignment
  gradeItems GradeItem[]  // One-to-many relation with GradeItem
}

model GradeItem {
  id          String      @id @default(uuid())
  fullMark    Float       // Full mark of the grade item
  weight      Float       // Weight of the grade item in percentage
  courseId    String      // Link to Course model
  course      Course      @relation(fields: [courseId], references: [id])
  assignment  Assignment? 
}